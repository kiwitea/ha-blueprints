blueprint:
  name: ZHA - Philips Hue Dimmer Switch
  description: 'Control lights with a Philips Hue Dimmer Switch.

    The top "on" button will turn the lights on to the last set brightness

    (unless the force brightness is toggled on in the blueprint).

    Dim up/down buttons will change the brightness smoothly and can be pressed

    and hold until the brightness is satisfactory.

    The bottom "off" button will turn the lights off.
    '
  domain: automation
  input:
    remote:
      name: Philips Hue Dimmer Switch
      description: Pick either RWL020 (US), RWL021 (EU) or RWL022 (EU)
      selector:
        device:
          filter:
            - integration: zha
          entity:
            - domain:
                - sensor
              device_class:
                - battery
          multiple: false
    light:
      name: Light(s)
      description: The light(s) to control
      selector:
        target:
          entity:
            - domain:
                - light
    light_group:
      name: Light group
      description: Group of lights to switch off on long press 'off'
      selector:
        target:
          entity:
            - domain: light
      default: {}
    scene_selector:
      name: Input scene selector
      description: Input (helper) of type select/dropdown holding the light's available scene names
      selector:
        target:
          entity:
            - domain:
              - input_select
      default: null
    force_brightness:
      name: Force turn on brightness
      description:
        'Force the brightness to the set level below, when the "on" button
        on the remote is pushed and lights turn on.'
      default: false
      selector:
        boolean: {}
    brightness:
      name: Brightness
      description: Brightness of the light(s) when turning on
      default: 100
      selector:
        number:
          min: 0.0
          max: 100.0
          mode: slider
          step: 1.0
          unit_of_measurement: "%"
    min_brightness:
      name: Min Brightness
      description: Minimum brightness of the light(s) when dimming
      default: 5
      selector:
        number:
          min: 0
          max: 255
          mode: slider
          step: 1
  source_url: https://github.com/kiwitea/ha-blueprints/blob/main/light-switch/zha-hue-dimmer-switch.yaml
mode: restart
max_exceeded: silent
variables:
  light: !input 'light'  # FIXME: fails when user selected area or device instead of entity
  light_group: !input 'light_group'
  scene_selector: !input 'scene_selector'
  force_brightness: !input 'force_brightness'
  min_brightness: !input 'min_brightness'
trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: !input remote
action:
  - variables:
      command: "{{ trigger.event.data.command }}"
      cluster_id: "{{ trigger.event.data.cluster_id }}"
      endpoint_id: "{{ trigger.event.data.endpoint_id }}"
      cur_brightness: '{{ state_attr(light.entity_id, ''brightness'') | int(0) }}'
  - choose:
      # Light on
      - conditions:
          - "{{ command == 'on' }}"
          - "{{ cluster_id == 6 }}"
          - "{{ endpoint_id == 1 }}"
        sequence:
          - choose:
              - conditions: "{{ force_brightness }}"
                sequence:
                  - service: light.turn_on
                    target: !input light
                    data:
                      transition: 1
                      brightness_pct: !input brightness
            default:
              - service: light.turn_on
                target: !input light
                data:
                  transition: 1
      # Light off
      - conditions:
          - "{{ command == 'off_with_effect' }}"
          - "{{ cluster_id == 6 }}"
          - "{{ endpoint_id == 1 }}"
        sequence:
          - service: light.turn_off
            target: !input light
            data:
              transition: 1
      # All lights off on long hold off
      - conditions:
          - "{{ command == 'on_long_release' }}"
          - "{{ cluster_id == 64512 }}"
          - "{{ endpoint_id == 1 }}"
          - "{{ light_group | length > 0 }}"
        sequence:
          - service: homeassistant.turn_off
            target: !input light_group
            data:
              transition: 1
      # Brightness up
      - conditions:
          - "{{ command == 'step' }}"
          - "{{ cluster_id == 8 }}"
          - "{{ endpoint_id == 1 }}"
          - "{{ trigger.event.data.params.step_mode == 0 }}"
          - "{{ trigger.event.data.params.step_size == 30 }}"
        sequence:
          - service: light.turn_on
            target: !input light
            data:
              brightness_step: 25
              transition: 1
      # Brightness up, hold
      - conditions:
          - "{{ command == 'step' }}"
          - "{{ cluster_id == 8 }}"
          - "{{ endpoint_id == 1 }}"
          - "{{ trigger.event.data.params.step_mode == 0 }}"
          - or:
              - "{{ trigger.event.data.params.step_size == 56 }}"
              - "{{ trigger.event.data.params.step_size == 63 }}"
        sequence:
          - service: light.turn_on
            target: !input light
            data:
              brightness_step_pct: 50
              transition: 1
      # Brightness down
      - conditions:
          - "{{ command == 'step' }}"
          - "{{ cluster_id == 8 }}"
          - "{{ endpoint_id == 1 }}"
          - "{{ trigger.event.data.params.step_mode == 1 }}"
          - "{{ trigger.event.data.params.step_size == 30 }}"
        sequence:
          - choose:
            - conditions: '{{ (cur_brightness - 25) >= min_brightness }}'
              sequence:
              - service: light.turn_on
                target: !input light
                data:
                  brightness_step: -25
                  transition: 1
            default:
            - service: light.turn_on
              target: !input 'light'
              data:
                transition: 1
                brightness: !input 'min_brightness'
      # Brightness down, hold
      - conditions:
          - "{{ command == 'step' }}"
          - "{{ cluster_id == 8 }}"
          - "{{ endpoint_id == 1 }}"
          - "{{ trigger.event.data.params.step_mode == 1 }}"
          - or:
              - "{{ trigger.event.data.params.step_size == 56 }}"
              - "{{ trigger.event.data.params.step_size == 63 }}"
        sequence:
          - choose:
            - conditions: '{{ (cur_brightness - 50) >= min_brightness }}'
              sequence:
              - service: light.turn_on
                target: !input light
                data:
                  brightness_step: -50
                  transition: 1
            default:
            - service: light.turn_on
              target: !input 'light'
              data:
                transition: 1
                brightness: !input 'min_brightness'
      # Cycle through predefined scenes
      - conditions:
        - "{{ command == 'recall' }}"
        - "{{ cluster_id == 5 }}"
        - "{{ endpoint_id == 1 }}"
        - "{{ scene_selector != null }}"
        sequence:
          - service: input_select.select_next
            target: 
              entity_id: "{{ scene_selector.entity_id }}"
          - service: scene.turn_on
            target:
              entity_id: "scene.{{ states(scene_selector.entity_id) }}"
            data:
              transition: 1
